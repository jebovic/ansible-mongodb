env:
  - distro: debianjessie
    init: "/sbin/init"
    run_opts: ""
    playbook: test.yml
  - distro: ubuntutrusty
    init: "/sbin/init"
    run_opts: ""
    playbook: test.yml
  - distro: ubuntuxenial
    init: "/sbin/init"
    run_opts: ""
    playbook: test.yml

services:
  - docker

before_install:
  - docker pull jebovic/${distro}-ansible:latest

script:
  # run container
  - container_id=$(mktemp)
  - docker run --detach --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} jebovic/${distro}-ansible:latest "${init}" > "${container_id}"
  # syntax checking
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} --syntax-check
  # test role
  - docker exec "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook}
  # test role idempotence
  - idempotence=$(mktemp)
  - docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  # test role tasks
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm systemctl --no-pager status mongodb
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm systemctl --no-pager stop mongodb
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm systemctl --no-pager start mongodb

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
  slack:
    secure: jMA129b76AjWDPVLI7GVGCkso8rgaB/521chMNXKco17rYnakf7V7w1ye6fnValffl0SRvfKtRa95Q8fF8Evwq/DUYX7JU2fDdgQDD2F95AL2ti2TXNhI8HW/X+ZMCSenlMJOEoHPNwtUpKFXzfAutasG9y3ZgY3hsBdA9TbFQgyQQ+8RGTDXdkMN8zmcHFVwdOgLZOKeUrM4wvxC4erP0tE8R6wjT0imyE6a7zWE9ObeN8pDEM3+l4tlRV5G1OBnQvjoACykE7NGP0cCwKXnillzBRuOnaYIQ212xG2Jxn+qYgrIvAY41gIRVPBbxQnepPa97r0uvAJWszpBcvJO1FCnVJ9kvpB4U46b3kyISj9besWLdVmuGUC3VSeWCEr/GuclfUAB1kdDNMikX92otySp4op6IYgvUvlNPIWSTVs46LYdxTzZBCiONykvNq6gLUp6d5XOza6s6nQD7ReWDVx2hiUhefRDB+Ye0AZitK6QlErHrxvsn3iLUijrT6Qj9Ash2A/w6o3ah8wxDoxQ2X22m+gkCxP74nJBR4bzT2eeozMfbGR4uefSyUXMmQzzds9kIUqF1elHsHC1EP564di6AFi3PDWMvA2gFaqSw8KUbOPdxKqoU2T1HvqTnmk06i3Ovutdxfn7XKv2TwF90Yq5H0XrqPnp4QgrE3BXk0=
